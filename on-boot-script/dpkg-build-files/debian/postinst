#!/bin/sh
# postinst script for udm-boot
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
      echo '#!/bin/sh

            if [ -d /mnt/data/on_boot.d ]; then
                for i in /mnt/data/on_boot.d/*.sh; do
                    if [ -r $i ]; then
                        . $i
                    fi
                done
            fi
            ' > /tmp/on_boot.sh
       scp -o StrictHostKeyChecking=no /tmp/on_boot.sh root@127.0.1.1:/mnt/data/on_boot.sh
       ssh -o StrictHostKeyChecking=no root@127.0.1.1 'chmod +x /mnt/data/on_boot.sh'
       ssh -o StrictHostKeyChecking=no root@127.0.1.1 'mkdir -p /mnt/data/on_boot.d'

       rm /tmp/on_boot.sh

       echo "#!/bin/sh
            ssh -o StrictHostKeyChecking=no root@127.0.1.1 '/mnt/data/on_boot.sh'" > /etc/init.d/udm.sh
       chmod +x /etc/init.d/udm.sh
       echo "[Unit]
       Description=Run On Startup UDM
       After=network.target

       [Service]
       ExecStart=/etc/init.d/udm.sh

       [Install]
       WantedBy=multi-user.target" > /etc/systemd/system/udmboot.service
       deb-systemd-invoke enable udmboot
       deb-systemd-invoke start udmboot
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
